spring.application.name=course-service
server.port=${COURSE_SERVICE_PORT}

#Mongo config
spring.data.mongodb.host=mongodb_course
spring.data.mongodb.port=${MONGO_ALL_ON_SYS}
spring.data.mongodb.database=${MONGO_COURSE_DATABASE}
spring.data.mongodb.username=${MONGO_ROOT_USERNAME}
spring.data.mongodb.password=${MONGO_ROOT_PASSWORD}
spring.data.mongodb.authentication-database=admin
spring.data.mongodb.auto-index-creation=true


# AWS S3 Configuration
cloud.aws.credentials.accessKey=${AWS_ACCESS_KEY}
cloud.aws.credentials.secretKey=${AWS_SECRET_KEY}
cloud.aws.region.static=${AWS_REGION}
cloud.aws.s3.bucket=${AWS_S3_BUCKET_COURSE}

# File Upload Configuration
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# External Services Configuration
profile.url=${PROFILE_SERVICE_URL}
lesson.service.url=${LECTURE_SERVICE_URL}
assignment.url=${ASSIGNMENT_SERVICE_URL}
exam-result.url=${EXAM_RESULTS_SERVICE_URL}
enrollement.url=${ENROLLMENT_SERVICE_URL}


spring.security.oauth2.resourceserver.jwt.issuer-uri=${KEYCLOAK_URL}/realms/vmaudev

management.endpoints.web.exposure.include=health, info, metrics, prometheus
management.metrics.distribution.percentiles-histogram.http.server.requests=true
management.observations.key-values.application=course-service
management.tracing.sampling.probability=1.0





# Kafka Producer Configuration
spring.kafka.bootstrap-servers=${KAFKA_BROKER_BOOTSTRAP_SERVER}
spring.kafka.template.default-topic=course-deleted
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=io.confluent.kafka.serializers.KafkaAvroSerializer
spring.kafka.producer.properties.schema.registry.url=${SCHEMA_REGISTRY_URL}

# Kafka Consumer Configuration
spring.kafka.consumer.group-id=course-service
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=io.confluent.kafka.serializers.KafkaAvroDeserializer
spring.kafka.consumer.properties.schema.registry.url=${SCHEMA_REGISTRY_URL}
spring.kafka.consumer.properties.specific.avro.reader=true
