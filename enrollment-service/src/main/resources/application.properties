
spring.application.name=enrollment-service
server.port=${ENROLLMENT_SERVICE_PORT}



# MySQL Configuration
spring.datasource.url=${MYSQL_DATABASE_URL}
spring.datasource.username=${MYSQL_DATABASE_USERNAME}
spring.datasource.password=${MYSQL_DATABASE_PASSWORD}
spring.jpa.hibernate.ddl-auto=none

# External Service Configuration
profile.service.url=${PROFILE_SERVICE_URL}
course.service.url=${COURSE_SERVICE_URL}


# Keycloak Configuration
spring.security.oauth2.resourceserver.jwt.issuer-uri=${KEYCLOAK_URL}/realms/vmaudev

management.endpoints.web.exposure.include=*
management.metrics.distribution.percentiles-histogram.http.server.requests=true
management.observations.key-values.application=enrollment-service
management.tracing.sampling.probability=1.0


# Kafka Producer Configuration
spring.kafka.bootstrap-servers=${KAFKA_BROKER_BOOTSTRAP_SERVER}
spring.kafka.template.default-topic=order-placed
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=io.confluent.kafka.serializers.KafkaAvroSerializer
spring.kafka.producer.properties.schema.registry.url=${SCHEMA_REGISTRY_URL}

# Kafka Consumer Configuration
spring.kafka.consumer.group-id=notification-service
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=io.confluent.kafka.serializers.KafkaAvroDeserializer
spring.kafka.consumer.properties.schema.registry.url=${SCHEMA_REGISTRY_URL}
spring.kafka.consumer.properties.specific.avro.reader=true



# Eureka Client Configuration
eureka.client.service-url.defaultZone=http://${EUREKA_USERNAME:admin}:${EUREKA_PASSWORD:admin}@eureka-server:8761/eureka/
eureka.client.fetch-registry=true
eureka.client.register-with-eureka=true
eureka.instance.preferIpAddress=true
eureka.instance.instanceId=${spring.application.name}:${server.port}

